
buildscript {
    repositories {
        mavenCentral()
        maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
        maven { url "https://plugins.gradle.org/m2/" }
    }
}

plugins {
    id 'com.vaadin'
    id 'war'
//    id "com.dorongold.task-tree" version "2.1.0"
}

defaultTasks("war")

repositories {
    mavenCentral()
    maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://maven.vaadin.com/vaadin-addons" }
}


vaadin {
    pnpmEnable = false
    optimizeBundle = true
    productionMode = true
}

tasks.withType(JavaCompile) {
//    options.compilerArgs << '-Xlint:unchecked'
//    options.deprecation = true
}

group 'org.modellwerkstatt'
// version '0.9'

dependencies {
    implementation enforcedPlatform("com.vaadin:vaadin-bom:$vaadinVersion")

    // Vaadin
    implementation("com.vaadin:vaadin")
    implementation('org.vaadin.addons.componentfactory:autoselectcombobox:3.1.0')
    providedCompile "javax.servlet:javax.servlet-api:3.1.0"

    // logging
    // currently we are logging through the SLF4J API to SLF4J-Simple. See src/main/resources/simplelogger.properties file for the logger configuration
    implementation "org.slf4j:slf4j-simple:1.7.30"


    // moware dependencies * * * * * * * * * * * * * * * * *

    implementation files("${mowarePluginHome}/jars/basis/joda-time-2.12.5.jar")
    implementation files("${mowarePluginHome}/jars/basis/spring-core-5.3.27.jar")
    implementation files("${mowarePluginHome}/jars/basis/spring-beans-5.3.27.jar")
    implementation files("${mowarePluginHome}/jars/basis/spring-context-5.3.27.jar")

    implementation files("${mowarePluginHome}/languages/MoWareLangAndSolutions/org.modellwerkstatt.manmap.runtime.jar")
    implementation files("${mowarePluginHome}/languages/MoWareLangAndSolutions/org.modellwerkstatt.objectflow.runtime.jar")
    implementation files("${mowarePluginHome}/languages/MoWareLangAndSolutions/org.modellwerkstatt.dataux.runtime.jar")


    // implementation files("${mowarePluginHome}/jars/security/spring-security-core-5.3.13.RELEASE.jar")
    // implementation files("${mowarePluginHome}/jars/security/spring-security-config-5.3.13.RELEASE.jar")
    // implementation files("${mowarePluginHome}/jars/security/spring-security-oauth2-client-5.3.13.RELEASE.jar")
    // implementation files("${mowarePluginHome}/jars/security/spring-security-web-5.3.13.RELEASE.jar")

    implementation files("${mowarePluginHome}/jars/security/google-api-client-2.0.0.jar")
    implementation files("${mowarePluginHome}/jars/security/google-oauth-client-1.34.1.jar")
    implementation files("${mowarePluginHome}/jars/security/google-http-client-1.42.1.jar")
    implementation files("${mowarePluginHome}/jars/security/google-http-client-gson-1.42.1.jar")

}

// ant.importBuild "${mowareHome}/objectflow/assembly/bmoware.xml"
ant.importBuild "${mowareHome}/turkuforms/assembly/build.xml"


task updateDesktopGrid {
    delete 'src/main/java/org/modellwerkstatt/addons/desktopgridpro'
    delete 'frontend/src'
    delete 'frontend/styles'

    copy {
        from "${mowareHome}/../DesktopGridPro/src/main/java/org/modellwerkstatt/addons/desktopgridpro"
        into "src/main/java/org/modellwerkstatt/addons/desktopgridpro"
    }

    copy {
        from "${mowareHome}/../DesktopGridPro/src/main/resources/META-INF/resources/frontend/src"
        into "frontend/src"
    }

    copy {
        from "${mowareHome}/../DesktopGridPro/src/main/resources/META-INF/resources/frontend/styles"
        into "frontend/styles"
    }
}

compileJava {
    dependsOn(updateDesktopGrid)
    dependsOn("bmoware.mowarePluginAdoption")
}

war {
    archiveName = "turkuforms.war"

    from("static/") {
        into("static/")
    }

    rootSpec.exclude('**/org.modellwerkstatt.*.jar')
    rootSpec.exclude('**/spring-*.jar')
    rootSpec.exclude('**/joda-*.jar')
}



task ZZ_mowareIntegrate(type: Copy) {
    dependsOn(war)
    from war.archivePath
    into "${mowareHome}/turkuforms/jars"
}



task zz_buildSimpleOne() {
    dependsOn(ZZ_mowareIntegrate)
    dependsOn("bmoware.mowareUpdatePluginForTukru")
    dependsOn(mowareBuildSimpleOne)
    dependsOn(redeployOnly)
}

task zz_buildForMoWarePlugin() {
    dependsOn(ZZ_mowareIntegrate)
    dependsOn("bmoware.mowareUpdatePluginForTukru")
    dependsOn(vaadinClean)

}

/* gradle.taskGraph.whenReady {
    tasks.findByName('vaadinPrepareFrontend').enabled(false)
    tasks.findByName('vaadinBuildFrontend').enabled(false)

} */
