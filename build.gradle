
buildscript {
    repositories {
        mavenCentral()
        maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
        maven { url "https://plugins.gradle.org/m2/" }
    }
}

plugins {
    id 'com.vaadin'
    id 'war'
//    id "com.dorongold.task-tree" version "2.1.0"
}

defaultTasks("war")

repositories {
    mavenCentral()
    maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
    maven { url "https://plugins.gradle.org/m2/" }
}


vaadin {
    pnpmEnable = false
    optimizeBundle = false
    productionMode = true
}

tasks.withType(JavaCompile) {
//    options.compilerArgs << '-Xlint:unchecked'
//    options.deprecation = true
}

group 'org.modellwerkstatt'
// version '0.9'

dependencies {
    implementation enforcedPlatform("com.vaadin:vaadin-bom:$vaadinVersion")

    // Vaadin
    implementation("com.vaadin:vaadin-core")
    providedCompile "javax.servlet:javax.servlet-api:3.1.0"

    // logging
    // currently we are logging through the SLF4J API to SLF4J-Simple. See src/main/resources/simplelogger.properties file for the logger configuration
    implementation "org.slf4j:slf4j-simple:1.7.30"


    // moware dependencies * * * * * * * * * * * * * * * * *
    implementation files("./extlib/selection-grid-flow-2.0.0.jar")
    implementation files("${mowarePluginHome}/jars/basis/joda-time-2.10.jar")
    implementation files("${mowarePluginHome}/jars/basis/spring-core-5.2.9.RELEASE.jar")
    implementation files("${mowarePluginHome}/jars/basis/spring-beans-5.2.9.RELEASE.jar")
    implementation files("${mowarePluginHome}/jars/basis/spring-context-5.2.9.RELEASE.jar")
    implementation files("${mowarePluginHome}/jars/basis/spring-aop-5.2.9.RELEASE.jar")
    implementation files("${mowarePluginHome}/jars/basis/spring-jdbc-5.2.9.RELEASE.jar")
    implementation files("${mowarePluginHome}/jars/basis/spring-tx-5.2.9.RELEASE.jar")
    implementation files("${mowarePluginHome}/jars/basis/spring-expression-5.2.9.RELEASE.jar")
    implementation files("${mowarePluginHome}/jars/basis/mo-javaxbus-1.0.jar")

    implementation files("${mpsHome}/lib/mps-references.jar")
    implementation files("${mpsHome}/lib/mps-collections.jar")
    implementation files("${mpsHome}/lib/mps-closures.jar")
    implementation files("${mpsHome}/lib/commons-lang-2.4.jar")


    implementation files("${mowarePluginHome}/languages/MoWareLangAndSolutions/org.modellwerkstatt.manmap.runtime.jar")
    implementation files("${mowarePluginHome}/languages/MoWareLangAndSolutions/org.modellwerkstatt.objectflow.runtime.jar")
    implementation files("${mowarePluginHome}/languages/MoWareLangAndSolutions/org.modellwerkstatt.dataux.runtime.jar")


}

ant.importBuild "${mowareHome}/objectflow/assembly/bmoware.xml"

war {
    dependsOn(mowarePluginAdoption)
    webXml = file('artefact/web.xml')

    from(appClassesHome) {
        into 'WEB-INF/classes'
    }
}


task ZZ_tomcatHotDeploy(type: Copy) {
    dependsOn(war)
    from war.archivePath
    into "${tomcatHome}/webapps"
}


/* gradle.taskGraph.whenReady {
    tasks.findByName('vaadinPrepareFrontend').enabled(false)
    tasks.findByName('vaadinBuildFrontend').enabled(false)

} */
